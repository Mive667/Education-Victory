# .coveragerc to control coverage.py
[run]
source = .
omit = 
    */migrations/*
    */node_modules/*
    __init__.py
    manage.py

branch = True

[report]
# fail if under the threshold
fail_under = 50
show_missing = True
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError

# Regexes for lines to exclude from consideration
exclude_also =
    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    # Don't complain about abstract methods, they aren't run:
    @(abc\.)?abstractmethod

ignore_errors = True

[html]
directory = coverage_html_report
